
#Copyright (c) 2001-2004 Amar Chaudhary. All rights reserved.
#Copyright (c) 1998-2001 Regents of the University of California.
#All rights reserved.
#
#     ``The contents of this file are subject to the Open Sound World Public
#     License Version 1.0 (the "License"); you may not use this file except in
#     compliance with the License. A copy of the License should be included
#     in a file named "License" or "License.txt" in the distribution from 
#     which you obtained this file. 
#
#     Software distributed under the License is distributed on an "AS IS"
#     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
#     License for the specific language governing rights and limitations
#     under the License.
#
#     The Original Code is Open Sound World (OSW) software.
#
#     The Initial Developer of the Original Code is Amar Chaudhary.
#     Portions created by Amar Chaudhary are Copyright (C) 1998-2001 
#     Regents of the University of California and Amar Chaudhary. 
#     All Rights Reserved.
#
#     Contributor(s):


include System.mak
include ../generic/Version.mak

CXX = cl
CC = cl

#No reason not to compile with ASIO (at the moment)
USEASIO=1

INCLUDES =  -I../include -I../generic -I. -I../types -I../sdif -I$(TCL_DIR)/include -I../osc -I../portaudio

OPTFLAGS = -O2 $(INCLUDES) -GR -GX -G6 -Oa -Ob2 -MD -Zm1000 -D "_WINDOWS" -D "_OSWCORE" -D "_USING_TCL"  $(VERSIONOPTS)

DEBUGCFLAGS = $(INCLUDES) -GR -GX -GZ -Zi -MDd -Zm1000 -D "_WINDOWS" -D "_OSWCORE" -D "_USING_TCL" -D "OSW_DEBUG" $(VERSIONOPTS)

!IFDEF USEDEBUG
CFLAGS = $(DEBUGCFLAGS)
!ELSE
CFLAGS = $(OPTFLAGS)
!ENDIF

CXXFLAGS = $(CFLAGS)

OBJ = obj

WINOBJECTS =  oswWinMME.$(OBJ) oswWinMidi.$(OBJ) oswWinLoadOSX.$(OBJ) oswWinThread.$(OBJ) oswWinMutex.$(OBJ) oswWinSock.$(OBJ) oswWinSelect.$(OBJ) oswWinHiResTimer.$(OBJ) oswWinPrefs.$(OBJ) oswWinFileUtils.$(OBJ) oswWinInit.$(OBJ)

PACOMMON = pa_lib.$(OBJ) 
PAMME = pa_win_wmme.$(OBJ)
PAOBJECTS = $(PACOMMON) $(PAMME)


!IFDEF USEDEBUG
LIBFLAGS = /LIBPATH:$(TCL_DIR)/lib /MACHINE:X86  /OPT:NOREF /INCREMENTAL:yes /DEBUG
!ELSE
LIBFLAGS = /LIBPATH:$(TCL_DIR)/lib /MACHINE:X86  /OPT:NOREF /INCREMENTAL:yes
!ENDIF

TCLLIBS = tcl82.lib tk82.lib
LIBRARIES = winmm.lib user32.lib dsound.lib wsock32.lib advapi32.lib ole32.lib $(TCLLIBS)

!IFDEF USEASIO
ASIODRIVER = oswWinAsio.osx
!ELSE
ASIODRIVER = 
!ENDIF

###################
# Generic C++ files
include ../generic/Generic.mak


########################
#libraries / executables

all: libosw.dll osw.exe oswbin.exe drivers

osw.exe : main.$(OBJ) libosw.dll oswWinRes.res
	link /OUT:osw.exe $(LIBFLAGS) main.$(OBJ) libosw.lib $(TCLLIBS) oswWinRes.res

oswbin.exe :  oswWinMain.obj libosw.dll oswWinRes.res
	link @<<
	/OUT:oswbin.exe /SUBSYSTEM:console $(LIBFLAGS)  oswWinMain.obj libosw.lib $(LIBRARIES) oswWinRes.res
<<

libosw.dll : $(OBJECTS) $(WINOBJECTS) $(SDIF_OBJECTS) $(OSC_OBJECTS) $(PAOBJECTS)
	link @<<	
  /DLL /OUT:libosw.dll /SUBSYSTEM:console $(LIBFLAGS) $(OBJECTS) $(WINOBJECTS) $(LIBRARIES) $(SDIF_OBJECTS) $(OSC_OBJECTS) $(PACOMMON) $(PAMME)
<<


############################
# Windows-specific C++ files

oswWinLoadOSX.$(OBJ) : oswWinLoadOSX.cpp $(REQUIRED_H)
	$(CC) $(CFLAGS) -c oswWinLoadOSX.cpp

oswWinMME.$(OBJ) : oswWinMME.cpp $(REQUIRED_H) ../include/oswAudio.h \
	oswWinMME.h ../include/oswTime.h ../include/oswClock.h
	$(CC) $(CFLAGS) -c oswWinMME.cpp

oswWinMidi.$(OBJ) : oswWinMidi.cpp $(REQUIRED_H) ../include/oswMidi.h \
	oswWinMidi.h
	$(CC) $(CFLAGS) -c oswWinMidi.cpp

oswWinThread.$(OBJ) : oswWinThread.cpp $(REQUIRED_H) ../include/oswThread.h \
	 ../include/oswSched.h
	$(CC) $(CFLAGS) -c oswWinThread.cpp

oswWinMutex.$(OBJ) : oswWinMutex.cpp ../include/oswMutex.h
	$(CC) $(CFLAGS) -c oswWinMutex.cpp

oswWinSock.$(OBJ) : oswWinSock.cpp ../include/oswSock.h
	$(CC) $(CFLAGS) -c oswWinSock.cpp

oswWinSelect.$(OBJ) : oswWinSelect.cpp ../include/oswSelect.h
	$(CC) $(CFLAGS) -c oswWinSelect.cpp

oswWinHiResTimer.$(OBJ) : oswWinHiResTimer.cpp ../include/oswHiResTimer.h
	$(CC) $(CFLAGS) -c oswWinHiResTimer.cpp

oswWinPrefs.$(OBJ) : oswWinPrefs.cpp $(REQUIRED_H) ../include/oswPrefs.h
	$(CC) $(CFLAGS) -c oswWinPrefs.cpp

oswWinFileUtils.$(OBJ) : oswWinFileUtils.cpp  ../include/oswFileUtils.h
	$(CC) $(CFLAGS) -c oswWinFileUtils.cpp

oswWinInit.$(OBJ) : oswWinInit.cpp $(REQUIRED_H) ../include/oswSched.h \
	../include/oswInit.h oswWinDSound.h oswWinMidi.h ../include/oswClock.h 
	$(CC) $(CFLAGS) -c oswWinInit.cpp

oswWinMain.$(OBJ) : oswWinMain.cpp $(REQUIRED_H) ../include/oswInit.h
	$(CC) $(CFLAGS) -c oswWinMain.cpp

oswWinRes.res : oswWinRes.rc
	rc oswWinRes.rc


main.$(OBJ) : main.cpp
	$(CC) $(CFLAGS) -c main.cpp

#######################
# Drivers

drivers: $(ASIODRIVER)


oswWinAsio.osx : oswWinAsio.$(OBJ) pa_asio.$(OBJ) libosw.dll 
	link @<<	
        /DLL /OUT:oswWinAsio.osx /SUBSYSTEM:console $(LIBFLAGS) $(LIBRARIES) 
        oswWinAsio.$(OBJ) $(PACOMMON) pa_asio.$(OBJ) asio/asiolib.lib
        libosw.lib
<<

oswWinAsio.$(OBJ) : oswWinAsio.cpp oswWinAsio.h $(REQUIRED_H) \
        ../include/oswAudio.h ../include/oswClock.h
        $(CC) $(CFLAGS) -Iasio -c oswWinAsio.cpp


#######################
# PortAudio

pa_lib.$(OBJ) : ../portaudio/pa_lib.c
	$(CC) $(CFLAGS) -c ../portaudio/pa_lib.c

pa_win_wmme.$(OBJ) : ../portaudio/pa_win_wmme.c
	$(CC) $(CFLAGS) -c ../portaudio/pa_win_wmme.c

pa_asio.$(OBJ) : ../portaudio/pa_asio.cpp
	$(CC) $(CFLAGS) -DWIN32 -Iasio -c ../portaudio/pa_asio.cpp


#######################
# Cleaup & Installation
 
clean:
	del *.obj
	del *.dll
	del *.lib
	del *.exp
	del *.ilk
	del osw.exe
	del oswbin.exe
        if EXIST *.osx. del *.osx


execlean:
	del libosw.dll
	del osw.exe
        del oswbin.exe
        if EXIST *.osx. del *.osx


install: all
	tclsh82 testmkdir.tcl $(INSTALL_DIR)
	copy libosw.dll $(INSTALL_DIR)
	copy osw.exe $(INSTALL_DIR)
	copy oswbin.exe $(INSTALL_DIR)
	tclsh82 testmkdir.tcl $(INSTALL_DIR)/lib
	copy libosw.lib $(INSTALL_DIR)\lib
	tclsh82 reginstall.tcl $(INSTALL_DIR)
	tclsh82 xprefs.tcl $(OSW_SOURCE_DIR) $(INSTALL_DIR) $(TCL_DIR)/include $(TCL_DIR)/include
	xcopy /Y /E /I ..\..\scripts $(INSTALL_DIR)\scripts
	xcopy /Y /E /I ..\..\bitmaps $(INSTALL_DIR)\bitmaps
	xcopy /Y /E /I ..\..\externalizer $(INSTALL_DIR)\externalizer
	xcopy /Y /E /I ..\..\html $(INSTALL_DIR)\html
	xcopy /Y /E /I ..\..\help_patches $(INSTALL_DIR)\help_patches
	xcopy /Y /E /I ..\..\tutorials $(INSTALL_DIR)\tutorials
	xcopy /Y /E /I ..\..\demos $(INSTALL_DIR)\demos
	xcopy /Y /E ..\..\oswinit.tcl $(INSTALL_DIR)
	xcopy /Y /E /I ..\..\TclXML-1.2 $(INSTALL_DIR)\TclXML-1.2
	xcopy /Y /E /I ..\include $(INSTALL_DIR)\src\include
	xcopy /Y /E /I ..\types $(INSTALL_DIR)\src\types
	copy reginstall.tcl $(INSTALL_DIR)
	copy RunMe.tcl $(INSTALL_DIR)
	copy  ..\..\README $(INSTALL_DIR)
	copy  ..\..\License $(INSTALL_DIR)
	copy INSTALL.win $(INSTALL_DIR)
	copy ..\macosx\INSTALL.macosx $(INSTALL_DIR)
	copy ..\linux\INSTALL.linux $(INSTALL_DIR)
	copy ..\sgi\INSTALL.sgi $(INSTALL_DIR)
	copy INSTALL.win $(INSTALL_DIR)\html
!IFDEF USEASIO
        tclsh82 testmkdir.tcl $(INSTALL_DIR)/externals/drivers
        copy oswWinAsio.osx $(INSTALL_DIR)\externals\drivers
!ENDIF

bininstall: all
	copy libosw.dll $(INSTALL_DIR)
	copy osw.exe $(INSTALL_DIR)
	copy oswbin.exe $(INSTALL_DIR)
!IFDEF USEASIO
        tclsh82 testmkdir.tcl $(INSTALL_DIR)/externals/drivers
        copy oswWinAsio.osx $(INSTALL_DIR)\externals\drivers
!ENDIF
        copy libosw.lib $(INSTALL_DIR)\lib

externals:	
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/blob
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/osw
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/list
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/note
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/midi
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/sdif
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/table
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/cnmat
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/sinusoids
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/spectral
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/raw
        wish82 ../../externalizer/externalizer.tcl -batch ../externals/fx
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/patented
	wish82 ../../externalizer/externalizer.tcl -batch ../externals/win32

externalclean: external_clean

external_clean:
	tclsh82 external_clean.tcl

test:
        python oswtest.py --server=$(INSTALL_DIR)/oswbin

#this requires that you have TAR and GZIP on your system
dist:
	tar -uf osw.tar -C $(INSTALL_DIR)
	tar --delete lib/osw/externals/patented/*
	gzip osw.tar

patented-dist:
	tar -uf osw.tar -C $(INSTALL_DIR)
	gzip osw.tar

